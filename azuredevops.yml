trigger:
- none

pool:
  name: 'rafiagent'   # self-hosted Windows agent

variables:
  mavenPOMFile: 'pom.xml'

stages:

# ======================
# 1) Build & Unit Tests
# ======================
- stage: Build
  displayName: 'Build & Unit Tests'
  jobs:
  - job: BuildAndTest
    pool:
      name: 'rafiagent'
    steps:
    - task: Maven@4
      displayName: 'Unit Tests Run'
      inputs:
        mavenPomFile: '$(mavenPOMFile)'
        goals: test
        options: '-B -DskipTests=false'

    - task: PublishTestResults@2
      displayName: 'Publish Unit Test Results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/target/surefire-reports/*.xml'
        failTaskOnFailedTests: true

    - task: Maven@3
      displayName: 'Maven Build'
      inputs:
        mavenPomFile: '$(mavenPOMFile)'
        goals: 'clean package'

    # -----------------------
    # Collect & publish JAR(s)
    # -----------------------
    - task: CopyFiles@2
      displayName: 'Stage artifacts'
      inputs:
        contents: '**/target/*.jar'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

# ======================
# 2) Static Analysis (SAST) - SonarCloud
# ======================
- stage: CodeAnalysis
  displayName: 'Static Code Analysis'
  dependsOn: Build
  jobs:
  - job: SonarScan
    pool:
      name: 'rafiagent'
    steps:
    - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@3
      displayName: 'Prepare analysis on SonarQube Cloud'
      inputs:
        SonarQube: 'sonarcloud15thJuly'
        organization: 'rafi2'
        scannerMode: 'cli'
        cliScannerVersion: '7.0.2.4839'

    - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@3
      displayName: 'Run Code Analysis'
      inputs:
        jdkversion: 'JAVA_HOME'

    - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@3
      displayName: 'Publish Quality Gate Result'

# ======================
# 3) Dependency Scan - OWASP
# ======================
- stage: SecurityScan
  displayName: 'Dependency Vulnerability Scan'
  dependsOn: CodeAnalysis
  jobs:
  - job: OWASPScan
    pool:
      name: 'rafiagent'
    steps:
    - powershell: |
        Write-Host "Running OWASP Dependency-Check"
        & "C:\Tools\dependency-check\bin\dependency-check.bat" --project JavaProject --scan "$(Build.SourcesDirectory)" --format HTML --out "$(Build.ArtifactStagingDirectory)\owasp-report"
      displayName: 'OWASP Dependency-Check'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: dependency-check-report'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\owasp-report'
        ArtifactName: 'dependency-check-report'
# 4) Deploy to local folder (QA)
# ======================
- stage: DeployQA
  displayName: 'Deploy JAR to local folder (QA)'
  dependsOn: SecurityScan
  jobs:
  - job: CopyJarToLocal
    pool:
      name: 'rafiagent'
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download drop artifact'
      inputs:
        artifact: 'drop'
        path: '$(Pipeline.Workspace)\deploy'

    - powershell: |
        $deployFolder = "C:\QA_Deploy"
        if (-not (Test-Path $deployFolder)) {
          New-Item -ItemType Directory -Force -Path $deployFolder | Out-Null
        }

        Get-ChildItem "$(Pipeline.Workspace)\deploy" -Recurse -Filter *.jar | ForEach-Object {
          Copy-Item -Path $_.FullName -Destination $deployFolder -Force
          Write-Host "Copied $($_.Name) to $deployFolder"
        }
      displayName: 'Copy JAR to QA deploy folder'
