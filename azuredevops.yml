trigger:
- none

pool:
  name: 'rafiagent'   # self-hosted Windows agent

resources:
  repositories:
  - repository: regtests                      # alias used in checkout
    type: github
    name: MohammadRafi44/agi_Kabi            # <owner>/<repo>
    ref: refs/heads/main                     # adjust if different branch
    endpoint: GitHubRafi                     # service connection name in Azure DevOps

variables:
  RegTestsRepo: '$(Pipeline.Workspace)\s\regtests'   # checkout path for alias "regtests" on Windows

stages:
- stage: QA_Automation
  displayName: 'Run QA Automation from agi_Kabi'
  jobs:
  - job: AutomationTests
    displayName: 'Run QA Automation Tests'
    pool:
      name: 'rafiagent'
    steps:
    - checkout: regtests
      path: s\regtests
      displayName: 'Checkout automation tests repo (agi_Kabi)'

    # Diagnostic: verify repo layout
    - powershell: |
        Write-Host "Build.SourcesDirectory = $(Build.SourcesDirectory)"
        Write-Host "Pipeline.Workspace    = $(Pipeline.Workspace)"
        Get-ChildItem -Path "$(Pipeline.Workspace)\s" -Name
        if (Test-Path "$(Pipeline.Workspace)\s\regtests\pom.xml") {
          Write-Host "✅ Found pom.xml in regtests."
        } else {
          Write-Error "❌ pom.xml NOT found in $(Pipeline.Workspace)\s\regtests"
        }
      displayName: 'Check regtests repo structure'

    # Run Maven automation tests
    - task: Maven@4
      displayName: 'Run Reg-Auto-Tests'
      inputs:
        mavenPomFile: '$(Pipeline.Workspace)\s\regtests\pom.xml'
        goals: install
        options: '-Dmaven.repo.local=maven-local-repo install'

    # Clean JUnit XML headers
    - powershell: |
        $reportPath = "$(Pipeline.Workspace)\s\regtests\target\surefire-reports"
        if (-not (Test-Path $reportPath)) { throw "❌ Report path not found: $reportPath" }
        Get-ChildItem -Path $reportPath -Filter "TEST-*.xml" | ForEach-Object {
            (Get-Content $_.FullName) `
            -replace '<testsuite([^>]*)>', '' `
            -replace '</testsuite>', '' | Set-Content $_.FullName
        }
      displayName: 'Clean JUnit XML headers'

    # Publish JUnit results
    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/surefire-reports/TEST-*.xml'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(Pipeline.Workspace)\s\regtests\target\surefire-reports\TEST-*.xml'
        failTaskOnFailedTests: true

    # Copy latest Extent report
    - powershell: |
        $reportRoot = "$(Pipeline.Workspace)\s\regtests\report"
        $l
